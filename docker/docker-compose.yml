version: '3.7'

services:
  express-typescript-skeleton:
    build:
      context: ..
      args:
        - PORT=${PORT}
      dockerfile: ./docker/Dockerfile
      target: prod
    image: ${IMAGE_NAME}:prod
    container_name: express-typescript-skeleton
    restart: always
    depends_on:
      - express-typescript-skeleton-db
    env_file:
      - ../.env
    environment:
      - TZ=${TZ}
      - WAIT_HOSTS=express-typescript-skeleton-db:5432
    volumes:
      - ${LOGS_VOLUME}:/home/node/app/logs
    ports:
      - ${EXTERNAL_PORT}:${PORT}

  express-typescript-skeleton-db:
    image: postgres:15
    container_name: express-typescript-skeleton-db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ${DB_VOLUME}:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432

  express-typescript-skeleton-adminer:
    image: adminer
    container_name: express-typescript-skeleton-adminer
    restart: always
    environment:
      - ADMINER_DEFAULT_SERVER=express-typescript-skeleton-db
      - TZ=${TZ}
    ports:
      - ${DB_MANAGER_PORT}:8080

networks:
  default:
    name: ${IMAGE_NAME}-network
